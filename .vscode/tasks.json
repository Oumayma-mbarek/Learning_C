{
    "tasks": [
        {
            "type": "cppbuild",  /* The cppbuild type will tell the C/C++ extension to parse the stderr output of this command to put errors and warnings in the "problems" tab. */
            "label": "powermake_compile",  /* identifies the task in the launch.json file */
            "command": "/usr/bin/python",  /* This is the command executed, under Windows it will be "py", under debian 10 it will be "python3". */
            "args": [
                "/home/noix/Documents/C/makefile.py",
                "-rvd",  /* We activate the debug code, we rebuild everything so the warnings will not disappear and we use the verbose mode so it's easy to see the flags put by PowerMake */
                "-o",  /* This option tells powermake to generate a compile_commands.json in the .vscode folder. */
                ".vscode",
                "--retransmit-colors"  /* If the type at the top had been “shell” instead of cppbuild we wouldn't have needed this, but now powermake and GCC detect that they're being executed by a program that parses their output and by default disable color formatting codes. */
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            /* This task should be mapped to a key, like Ctrl+F7 for example */
            "type": "cppbuild",
            "label": "powermake_compile_single_file",
            "command": "/usr/bin/python",
            "args": [
                "/home/noix/Documents/C/makefile.py",
                "-rd",
                "--single-file",  /* We only compile the current file */
                "${file}",
                "--retransmit-colors"
            ],
            "options": {
                "cwd": "${workspaceFolder}",
            }
        }
    ],
    "version": "2.0.0"
}
